---
export interface Props {
  variant?: 'primary' | 'secondary' | 'tertiary' | 'ghost';
  size?: 'sm' | 'md' | 'lg';
  href?: string;
  target?: string;
  rel?: string;
  class?: string;
  [key: string]: any;
}

const {
  variant = 'primary',
  size = 'md',
  href,
  target,
  rel,
  class: className = '',
  ...rest
} = Astro.props;

const baseClasses = 'inline-flex items-center justify-center font-medium rounded-lg transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2';

const variantClasses = {
  primary: 'bg-primary text-white hover:bg-primary/90 focus:ring-primary/50',
  secondary: 'bg-secondary text-white hover:bg-secondary/90 focus:ring-secondary/50',
  tertiary: 'bg-transparent text-primary border border-primary hover:bg-primary hover:text-white focus:ring-primary/50',
  ghost: 'bg-transparent text-gray-700 hover:bg-gray-100 focus:ring-gray-500/50 dark:text-gray-300 dark:hover:bg-gray-800'
};

const sizeClasses = {
  sm: 'px-3 py-1.5 text-sm',
  md: 'px-4 py-2 text-base',
  lg: 'px-6 py-3 text-lg'
};

const classes = `${baseClasses} ${variantClasses[variant]} ${sizeClasses[size]} ${className}`;
const Element = href ? 'a' : 'button';
---

<Element
  href={href}
  target={target}
  rel={rel}
  class={classes}
  {...rest}
>
  <slot />
</Element>